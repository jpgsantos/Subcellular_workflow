function f_setup_input(stg,mmf)
% Creates code that loads the inputs of each experiment into a .mat file,
% and creates the code to read this inputs at runtime when the experiments
% are being simulated, all this generated code is stored on the
% Input_functions folder

matlab_model = mmf.model.data.mat_model;
data_model = mmf.model.data.data_model;
input_model_data = mmf.model.data.input_model_data;
Model_folder = mmf.model.main;
model_input = mmf.model.input_functions.input;

%Find correct path for loading depending on the platform
load(data_model,'sbtab')

load(matlab_model,'modelobj');

for exp_n = 1:size(sbtab.datasets,2)
    
    for n = 1:size(sbtab.datasets(exp_n).input,2)
        if size(sbtab.datasets(exp_n).input_value{n},2) > 100
            
            input = strrep(modelobj.species(1+str2double(strrep(...
                sbtab.datasets(exp_n).input(n),'S',''))).name,".","");
            inpX = input + "X";
            inpT = input + "T";
            inph1 = input + "h1";
            inph2 = input + "h2";
            
            fullFileName = sprintf('%s.m',...
                model_input + exp_n + "_" + input  );
            
            fileID = fopen(fullFileName, 'wt');
            
            fprintf(fileID,...
                "function thisAmp = "+...
                stg.name + "_input" + exp_n + "_" + input + "(times)\n"+...
                "persistent " + inpX + "\n"+...
                "persistent " + inpT + "\n"+...
                "persistent " + inph1 + "\n"+...
                "persistent " + inph2 + "\n"+...
                "if isempty(" + inpX + ")\n"+...
                "Data = coder.load('" + input_model_data +...
                "','exp" + exp_n + "_" + input + "');\n"+...
                inpX + " = Data.exp" + exp_n + "_" + input + "(:,2);\n"+...
                inpT + " = Data.exp" + exp_n + "_" + input + "(:,1);\n"+...
                inph1 + " = 1;\n"+...
                "end\n"+...
                "thisAmp = " + inpX + "(end);\n"+...
                "if times ~= " + sbtab.sim_time(exp_n)+"\n"+...
                "if times == 0\n"+...
                inph1 + " = 1;\n"+...
                "thisAmp = " + inpX + "(1);\n"+...
                "else\n"+...
                "while times > " + inpT + "(" + inph1 + ")\n"+...
                inph1 + " = " + inph1 + " + 1;\n"+...
                "end\n"+...
                "while times < " + inpT + "(" + inph1 + " -1)\n"+...
                inph1 + " = " + inph1 + " - 1;\n"+...
                "end\n"+...
                inph2 + " = (" + inpT + "(" + inph1 + ")-times)*1/("+...
                inpT + "(" + inph1 + ")-" + inpT + "(" + inph1 + "-1));\n"+...
                "thisAmp = (" + inpX + "(" + inph1 + "-1)*" + inph2 + " + "+...
                inpX + "(" + inph1 + ")*(1-" + inph2 + "));\n"+...
                "end\n"+...
                "end\n"+...
                "end");
            fclose(fileID);
        end
    end
end

fullFileName = sprintf('%s.m',model_input + "_creator"  );

fileID = fopen(fullFileName, 'wt');
fprintf(fileID, "function " + stg.name + "_input_creator(~)\n");
helper = 0;
for exp_n = 1:size(sbtab.datasets,2)
    for n =1:size(sbtab.datasets(exp_n).input,2)
        if size(sbtab.datasets(exp_n).input_value{n},2) > 100
            input = strrep(modelobj.species(1+str2double(strrep(...
                sbtab.datasets(exp_n).input(n),'S',''))).name,".","");
            if helper == 0
                helper = 1;
                helper2 = exp_n;
            end
            if n == 1 && exp_n == helper2
                fprintf(fileID,...
                    "load('" + data_model + "','sbtab');\n"+...
                    ...
                    "exp" + exp_n + "_" + input + "(:,1) ="+...
                    "sbtab.datasets(" + exp_n + ").input_time{" + n + "};\n"+...
                    ...
                    "exp" + exp_n + "_" + input + "(:,2) =" + ...
                    "sbtab.datasets(" + exp_n + ").input_value{" + n + "};\n"+...
                    ...
                    "save('" + input_model_data +...
                    "','exp" + exp_n + "_" + input + "');\n");
            else
                fprintf(fileID,...
                    "exp" + exp_n + "_" + input + "(:,1) ="+...
                    "sbtab.datasets(" + exp_n + ").input_time{" + n + "};\n"+...
                    ...
                    "exp" + exp_n + "_" + input + "(:,2) =" +...
                    "sbtab.datasets(" + exp_n +").input_value{" + n + "};\n"+...
                    ...
                    "save('" + input_model_data +...
                    "','exp" + exp_n + "_" + input + "','-append');\n");
                
            end
        end
    end
end
fprintf(fileID, "end\n");
fclose(fileID);

addpath(genpath(Model_folder));
eval(stg.name + "_input_creator()");
end